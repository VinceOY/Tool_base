CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1050404"))
k <- 3
group_id_col = "CHR_NO"
date_col = "OPD_DATE"
# rename data col
dt <- setnames(dt, date_col, "DATE")
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# Standardized date format
dt <- standardized_date(dt, "DATE")
# sort date
dt <- setorderv(dt, c(group_id_col, "DATE"))
dt
dt[, (k_times_data) := shift(DATE, n = -(k-1)), by = group_id_col]
dt[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
?setnames
# example2
dt <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1050404"))
k <- 3
group_id_col = "CHR_NO"
date_col = "OPD_DATE"
# rename data col
dt <- setnames(dt, date_col, "DATE")
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# Standardized date format
dt <- standardized_date(dt, "DATE")
# sort date
dt <- setorderv(dt, c(group_id_col, "DATE"))
#dt[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
set(dt, j = "k_times_data", value = shift(dt$DATE, n = -(k-1)), by = dt$group_id_col)
#dt[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
set(dt, j = "k_times_data", value = shift(DATE, n = -(k-1)), by = group_id_col)
dt[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
shifted_values <- shift(dt$DATE, n = -(k - 1))
set(dt, j = "k_times_data", value = shifted_values)
# example2
dt <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1050404"))
k <- 3
group_id_col = "CHR_NO"
date_col = "OPD_DATE"
# Data type restrictions
assert_that(is.data.table(dt), msg="Error: 'dt' must be a data.table")
assert_that(is.character(group_id_col),
msg="Error: 'group_id_col' must be a character")
assert_that(is.character(date_col),
msg="Error: 'date_col' must be a character")
assert_that(is.numeric(k), msg="Error: 'k' must be a numeric.")
# rename data col
dt <- setnames(dt, date_col, "DATE")
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# Standardized date format
dt <- standardized_date(dt, "DATE")
# sort date
dt <- setorderv(dt, c(group_id_col, "DATE"))
shifted_values <- shift(dt$DATE, n = -(k - 1))
set(dt, j = "k_times_data", value = shifted_values)
# cal diff => filter < 365 days => remove diff
dt[, diff := k_times_data - DATE]
shifted_values
shifted_values <- shift(dt$DATE, n = -(k - 1))
shifted_values
a <- shift(dt$DATE, n = -(k - 1))
a
set(dt, j = "k_times_data", value = a)
dt[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
# example2
dt <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1050404"))
k <- 3
group_id_col = "CHR_NO"
date_col = "OPD_DATE"
# rename data col
dt <- setnames(dt, date_col, "DATE")
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# Standardized date format
dt <- standardized_date(dt, "DATE")
# sort date
dt <- setorderv(dt, c(group_id_col, "DATE"))
dt <- dt[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
# example2
dt <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1050404"))
k <- 3
group_id_col = "CHR_NO"
date_col = "OPD_DATE"
# rename data col
dt <- setnames(dt, date_col, "DATE")
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# Standardized date format
dt <- standardized_date(dt, "DATE")
# sort date
dt <- setorderv(dt, c(group_id_col, "DATE"))
dt1 <- dt[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
iris
dt_copy <- copy(dt)
dt_copy
k <- 3
# example2
dt <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1050404"))
date_col = "OPD_DATE"
group_id_col = "CHR_NO"
# Standardized date format
dt <- standardized_date(dt, "DATE")
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# rename data col
dt <- setnames(dt, date_col, "DATE")
# example2
dt <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1050404"))
k <- 3
group_id_col = "CHR_NO"
date_col = "OPD_DATE"
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# rename data col
dt <- setnames(dt, date_col, "DATE")
dt
dt
# Drop Duplicate
dt <- unique(dt, by = c(group_id_col, "DATE"))
# Standardized date format
dt <- standardized_date(dt, "DATE")
dt
# sort date
dt <- setorderv(dt, c(group_id_col, "DATE"))
dt_copy <- copy(dt)
dt <- dt_copy[, k_times_data := shift(DATE, n = -(k-1)), by = group_id_col]
dt
dt
dt <- dt[diff <= 365]
dt[, diff := NULL]
# cal diff => filter < 365 days => remove diff
dt[, diff := k_times_data - DATE]
dt
# cal diff => filter < 365 days => remove diff
dt[, diff := k_times_data - DATE]
dt
dt <- dt[diff <= 365]
dt[, diff := NULL]
dt
new_dir <- "C:/Users/USER/Downloads/function_tool/"
setwd(new_dir)
source("tool_function/get_valid_data.R")
library(testthat)
# unit_test_test_item:
# 1.function work，2.duplicate date，3.diff group id，4.diff date type
# 5.different k=-1,0,1,3
#===============================================================================
test_that("get_valid_data() function test", {
# example1
dt <- data.table(
ID_TEST = c("ID1", "ID2", "ID2", "ID1", "ID2", "ID1"),
IPD_DATE = c("20160101", "20160202", "20160303", "20160404", "20160505",
"20160404"))
k <- 2
valid_data <- get_valid_data(dt, "ID_TEST", "IPD_DATE", k)
# create answer
answer <- data.table(
ID_TEST = c("ID1", "ID2", "ID2"),
DATE = as.Date(c("2016-01-01", "2016-02-02", "2016-03-03")),
k_times_data = as.Date(c("2016-04-04", "2016-03-03", "2016-05-05"))
)
# test same result
expect_equal(valid_data, answer)
# example2
dt2 <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1020404"))
k2 <- 3
valid_data2 <- get_valid_data(dt2, "CHR_NO", "OPD_DATE", k2)
# create answer
answer2 <- data.table(
CHR_NO = c("ID1", "ID1"),
DATE = as.Date(c("2016-01-01", "2016-02-02")),
k_times_data = as.Date(c("2016-03-03", "2016-04-04"))
)
# test same result
expect_equal(valid_data2, answer2)
})
# example1
dt <- data.table(
ID_TEST = c("ID1", "ID2", "ID2", "ID1", "ID2", "ID1"),
IPD_DATE = c("20160101", "20160202", "20160303", "20160404", "20160505",
"20160404"))
k <- 2
valid_data <- get_valid_data(dt, "ID_TEST", "IPD_DATE", k)
valid_data
valid_data
dt
# example2
dt2 <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1020404"))
k2 <- 3
valid_data2 <- get_valid_data(dt2, "CHR_NO", "OPD_DATE", k2)
# example2
dt2 <- data.table(
CHR_NO = c("ID1", "ID1", "ID1", "ID1", "ID2", "ID1"),
OPD_DATE = c("1050101", "1050202", "1050303", "1050404", "1050505",
"1020404"))
k2 <- -1
valid_data2 <- get_valid_data(dt2, "CHR_NO", "OPD_DATE", k2)
valid_data2
valid_data2
dt2
new_dir <- "C:/Users/USER/Downloads/function_tool/"
setwd(new_dir)
new_dir <- "C:/Users/USER/Downloads/function_tool/"
setwd(new_dir)
source("tool_function/get_valid_data.R")
source("tool_function/fetch_function.R")
col1 = c("CHR_NO", "HOSP_TYPE", "ID_NO", "SER_ILL")
col2 = c("CHR_NO", "OPD_DATE", "ICD9_CODE1", "ICD9_CODE2", "ICD9_CODE3",
"ICD10_CODE1", "ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4",
"ICD10_CODE5", "OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3")
col3 = c("CHR_NO", "IPD_DATE", "OP_CODE1", "OP_CODE2", "OP_CODE3", "OP_CODE4",
"OP_CODE5", "OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3",
"OPER10_CODE4", "OPER10_CODE5", "EDIAG_CODE", "ESDIAG_CODE1",
"ESDIAG_CODE2", "ESDIAG_CODE3", "ESDIAG_CODE4", "EDIAG_DESC",
#"EDIAG_DESC1", "EDIAG_DESC2", "EDIAG_DESC3", "EDIAG_DESC4",
"ICD10_CODE1", "ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4",
"ICD10_CODE5", "ICD10_CODE6", "ICD10_CODE7")
# BEGIN
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv/"
file_names <- list.files(path = folder_path, pattern = "\\.csv$",
full.names = TRUE)
head(file_names)
data1 <- fread(paste0(folder_path,"v_chr_basic_s.csv"))
data2 <- fread(paste0(folder_path,"v_opd_basic_s.csv"))
data3 <- fread("C:/Users/USER/Downloads/hospital/v_ipd_basic_s.csv")
# test_data2
disease_codes <- c("434","585")
target_ID_cols <- c("CHR_NO", "OPD_DATE")
disease_ID_cols <- c("ICD9_CODE1", "ICD9_CODE2", "ICD9_CODE3", "ICD10_CODE1",
"ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4", "ICD10_CODE5",
"OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3")
file_names
dt <- fetch_data(data2, target_ID_cols, disease_ID_cols, disease_codes)
dt
# disease code
disease_codes <- c("E08-E13")
disease_codes
target_ID_cols <- c("CHR_NO", "OPD_DATE")
disease_ID_cols <- c("ICD9_CODE1", "ICD9_CODE2", "ICD9_CODE3", "ICD10_CODE1",
"ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4", "ICD10_CODE5",
"OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3")
dt <- fetch_data(data2, target_ID_cols, disease_ID_cols, disease_codes)
dt
# disease code
disease_codes <- c("E08")
target_ID_cols <- c("CHR_NO", "OPD_DATE")
disease_ID_cols <- c("ICD9_CODE1", "ICD9_CODE2", "ICD9_CODE3", "ICD10_CODE1",
"ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4", "ICD10_CODE5",
"OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3")
dt <- fetch_data(data2, target_ID_cols, disease_ID_cols, disease_codes)
dt
k <- 2
k <- 3
clean_data <- get_valid_data(dt, "CHR_NO", "OPD_DATE", k)
clean_data
clean_data
unique(clean_data[CHR_NO])
unique(clean_data[,CHR_NO])
unique(clean_data[,CHR_NO])[1]
clean_data
earliest_dates <- clean_data %>%
group_by(CHR_NO) %>%
summarise(earliest_date = min(DATE))
earliest_dates
target_ID_cols2 <- c("CHR_NO", "IPD_DATE")
disease_ID_cols2 <- c("OP_CODE1", "OP_CODE2", "OP_CODE3", "OP_CODE4",
"OP_CODE5", "OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3",
"OPER10_CODE4", "OPER10_CODE5", "EDIAG_CODE", "ESDIAG_CODE1",
"ESDIAG_CODE2", "ESDIAG_CODE3", "ESDIAG_CODE4", "EDIAG_DESC",
"ICD10_CODE1", "ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4",
"ICD10_CODE5", "ICD10_CODE6", "ICD10_CODE7")
dt2 <- fetch_data(data3, target_ID_cols2, disease_ID_cols2, disease_codes)
dt2
k2 <- 1
clean_data2 <- get_valid_data(dt, "CHR_NO", "IPD_DATE", k2)
clean_data2 <- get_valid_data(dt2, "CHR_NO", "IPD_DATE", k2)
clean_data2
clean_data2
dt_f <- rbind(clean_data, clean_data2)
dt_f
# step3: find earlier earliest_dates
earliest_dates <- clean_data %>%
group_by(CHR_NO) %>%
summarise(earliest_date = min(DATE))
earliest_dates
# check other files
data4 <- fread(paste0(folder_path,"v_opd_basic_w.csv")) # 門診
data4
dt4 <- fetch_data(data4, target_ID_cols, disease_ID_cols, disease_codes)
dt
dt4
# check other files
clinic_list <- ["v_opd_basic_w.csv","v_opd_basic_t.csv","v_opd_basic_s.csv"]
# check other files
clinic_list <- c("v_opd_basic_w.csv","v_opd_basic_t.csv","v_opd_basic_s.csv")
print(i)
for (i in clinic_list) {
print(i)
}
tb_t <- data.table()
clinic_list <- c("v_opd_basic_w.csv","v_opd_basic_t.csv","v_opd_basic_s.csv")
disease_codes <- c("E08","E09","E10","E11","E12")
target_ID_cols <- c("CHR_NO", "OPD_DATE")
disease_ID_cols <- c("ICD9_CODE1", "ICD9_CODE2", "ICD9_CODE3", "ICD10_CODE1",
"ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4", "ICD10_CODE5",
"OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3")
k <- 3
tb_t <- data.table()
clinic_list <- c("v_opd_basic_w.csv","v_opd_basic_t.csv","v_opd_basic_s.csv")
disease_codes <- c("E08","E09","E10","E11","E12")
target_ID_cols <- c("CHR_NO", "OPD_DATE")
disease_ID_cols <- c("ICD9_CODE1", "ICD9_CODE2", "ICD9_CODE3", "ICD10_CODE1",
"ICD10_CODE2", "ICD10_CODE3", "ICD10_CODE4", "ICD10_CODE5",
"OPER10_CODE1", "OPER10_CODE2", "OPER10_CODE3")
k <- 3
tb_t <- data.table()
for (i in clinic_list) {
d_tmp <- fread(paste0(folder_path,i))
clean_tmp1 <- fetch_data(d_tmp, target_ID_cols, disease_ID_cols, disease_codes)
clean_tmp2 <- get_valid_data(clean_tmp1, "CHR_NO", "OPD_DATE", k)
tb_t <- rbind(tb_t, clean_tmp2)
}
dim(tb_t)
tb_t
# find earlier earliest_dates
earliest_dates <- tb_t %>%
group_by(CHR_NO) %>%
summarise(earliest_date = min(DATE))
earliest_dates
nrow(earliest_dates)
unique(earliest_dates$CHR_NO)
length(unique(earliest_dates$CHR_NO))
nrow(earliest_dates)
length(unique(earliest_dates$CHR_NO))
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv/"
file_names <- list.files(path = folder_path, pattern = "\\.csv$",
full.names = TRUE)
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021/"
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021/"
file_names <- list.files(path = folder_path, pattern = "\\.sas7bdat$",
full.names = TRUE)
file_names
file_names
file_names
file_names[1]
file <- file_names[1]
# 獲取檔案名稱（不包含路徑）
fn <- basename(file)
fn
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021/"
file_names <- list.files(path = folder_path, pattern = "\\.sas7bdat$",
full.names = TRUE)
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (file in file_names) {
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", file_name, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="", row.names = FALSE)
write.csv(data, file = csv_file_name, row.names = FALSE)
}
library(haven)
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (file in file_names) {
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", file_name, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="", row.names = FALSE)
write.csv(data, file = csv_file_name, row.names = FALSE)
}
file_names
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021/"
file_names <- list.files(path = folder_path, pattern = "\\.sas7bdat$",
full.names = TRUE)
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (file in file_names) {
print(file)
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", fn, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="", row.names = FALSE)
write.csv(data, file = csv_file_name, row.names = FALSE)
}
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021/"
file_names <- list.files(path = folder_path, pattern = "\\.sas7bdat$",
full.names = TRUE)
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (file in file_names) {
print(file)
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", fn, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="")
write.csv(data, file = csv_file_name, row.names = FALSE)
}
library(haven)
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021/"
file_names <- list.files(path = folder_path, pattern = "\\.sas7bdat$",
full.names = TRUE)
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (file in file_names) {
print(file)
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", fn, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="")
write.csv(d_tmp, file = csv_file_name, row.names = FALSE)
}
file_names
file_names[74:]
file_names
file_names[74]
file_names[74:80]
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (i in 74:length(file_names)) {
file <- file_names[i]
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", fn, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="")
write.csv(d_tmp, file = csv_file_name, row.names = FALSE)
}
rm(list=ls())
library(haven)
folder_path <- "C:/Users/USER/Downloads/hospital/TMUCRD_2021/"
file_names <- list.files(path = folder_path, pattern = "\\.sas7bdat$",
full.names = TRUE)
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (i in 74:length(file_names)) {
file <- file_names[i]
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", fn, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="")
write.csv(d_tmp, file = csv_file_name, row.names = FALSE)
}
file <- file_names[74]
file
# read sas
d_tmp <- read_sas(file)
# 清理記憶體
gc()
# 循環讀取每個符合條件的檔案並合併到 combined_data 中
for (i in 74:length(file_names)) {
file <- file_names[74]
# read sas
d_tmp <- read_sas(file)
# get file name
fn <- basename(file)
# remove sub
file_name <- sub("\\.sas7bdat$", "", fn, ignore.case = TRUE)
csv_file_name <- paste0("C:/Users/USER/Downloads/hospital/TMUCRD_2021_csv_new/",
file_name, ".csv", sep="")
write.csv(d_tmp, file = csv_file_name, row.names = FALSE)
gc()
}
